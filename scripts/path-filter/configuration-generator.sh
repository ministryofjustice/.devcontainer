#!/usr/bin/env bash

MODE="${1}"

case ${MODE} in
features)
  PATH_FILTER_CONFIGURATION_FILE=".github/path-filters/features.yml"
  SEARCH_BASE="features"
  SEARCH_PATTERN="devcontainer-feature.json"
  SKIP_FILE=".feature-path-filter-ignore"
  ;;
images)
  PATH_FILTER_CONFIGURATION_FILE=".github/path-filters/images.yml"
  SEARCH_BASE="images"
  SEARCH_PATTERN="*Dockerfile*"
  SKIP_FILE=".image-path-filter-ignore"
  ;;
*)
  echo "Usage: ${0} [features|images]"
  exit 1
  ;;
esac

folders=$(find "${SEARCH_BASE}" -type f -name "${SEARCH_PATTERN}" -exec dirname {} \; | sort -h | uniq)
export folders

echo "=== Folders ==="
echo "${folders}"

mkdir --parents "$(dirname "${PATH_FILTER_CONFIGURATION_FILE}")"

touch "${PATH_FILTER_CONFIGURATION_FILE}"

echo "Generating ${PATH_FILTER_CONFIGURATION_FILE}"
cat >"${PATH_FILTER_CONFIGURATION_FILE}" <<EOL
---
# This file is auto-generated by running the below command, do not manually amend.
# bash scripts/path-filter/configuration-generator.sh ${MODE}

EOL

for folder in ${folders}; do

  if [[ -f "${folder}/${SKIP_FILE}" ]]; then
    echo "Ignoring ${folder}"
    continue
  fi

  baseName=$(basename "${folder}")

  {
    printf "%s: %s/**\n" "${baseName}" "${folder}"
  } >>"${PATH_FILTER_CONFIGURATION_FILE}"

done
